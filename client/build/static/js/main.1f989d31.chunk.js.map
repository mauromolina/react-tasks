{"version":3,"sources":["context/auth/authContext.js","context/alerts/alertContext.js","components/auth/Login.js","components/auth/NewAccount.js","context/projects/projectContext.js","components/projects/NewProject.js","context/tasks/taskContext.js","components/projects/Project.js","components/projects/ProjectList.js","components/layout/Sidebar.js","components/layout/Navbar.js","components/tasks/TaskForm.js","components/tasks/Task.js","components/tasks/TaskList.js","components/projects/Projects.js","context/projects/projectReducer.js","types/index.js","config/axios.js","context/projects/projectState.js","context/tasks/taskReducer.js","context/tasks/taskState.js","context/alerts/alertReducer.js","context/alerts/alertState.js","context/auth/authReducer.js","config/authToken.js","context/auth/authState.js","components/routes/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["authContext","createContext","alertContext","Login","props","useContext","AlertContext","alert","showAlert","AuthContext","msg","auth","logIn","useEffect","history","push","category","useState","email","password","user","setUser","handleChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","onChange","to","NewAccount","signInUser","confirm","length","projectContext","NewProject","projectsContext","form","toggleForm","error","newProject","showErrorForm","project","setProject","onClick","taskContext","Project","getActualProject","getProjectTasks","_id","ProjectList","projects","getProjects","console","log","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Navbar","getAuthUser","logOut","TaskForm","actualProject","tasksContext","actualTask","taskError","newTask","validateTask","updateTask","setTask","task","actProject","Task","deleteTask","getActualTask","toggleStatus","status","getTask","TaskList","deleteProject","projectTasks","Projects","size","setSize","windowWidth","window","innerWidth","windowHeight","innerHeight","state","action","payload","filter","axiosClient","axios","create","baseURL","process","ProjectState","useReducer","projectReducer","dispatch","a","get","response","data","post","delete","Provider","children","TaskState","TaskReducer","params","tasks","put","taskExists","AlertState","alertReducer","setTimeout","localStorage","setItem","token","loading","removeItem","authToken","defaults","headers","common","AuthState","initialState","getItem","authReducer","PrivateRoute","Component","component","render","App","exact","path","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1f989d31.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;","import React, {useState, useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alerts/alertContext';\n\nconst Login = (props) => {\n\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n    const authContext = useContext(AuthContext);\n    const { msg, auth, logIn } = authContext;\n\n    useEffect( () => {\n        if(auth){\n            props.history.push('/projects');\n        }\n        if(msg){\n            showAlert(msg.msg, msg.category);\n        }\n    },[msg, auth, props.history])\n\n\n    // State para iniciar sesion\n    const [user, setUser] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = user;\n\n    const handleChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        // validar campos\n        if(email.trim() === '' || password.trim() === ''){\n            showAlert('Todos los campos son obligatorios', 'alerta-error');\n        }\n        // pasar al action\n        logIn({ \n            email,\n            password\n        });\n    }\n\n    return ( \n        <div className=\"form-usuario\">\n            { alert ? (<div className={`alerta ${alert.category}`}>{alert.msg}</div>) :null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label\n                            htmlFor=\"email\"\n                        >Email\n                        </label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"E-mail\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label\n                            htmlFor=\"password\"\n                        >Contraseña\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Contraseña\"\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Iniciar Sesión\"\n                        />\n                    </div>\n                </form>\n                <Link \n                    to={'/new-account'}\n                    className=\"enlace-cuenta\"\n                >Obtener Cuenta\n                </Link>\n            </div>\n        </div>\n        );\n}\n \nexport default Login;","import React, {useState, useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport AlertContext from '../../context/alerts/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst NewAccount = (props) => {\n\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n    const authContext = useContext(AuthContext);\n    const { msg, auth, signInUser } = authContext;\n\n    useEffect( () => {\n        if(auth){\n            props.history.push('/projects');\n        }\n        if(msg){\n            showAlert(msg.msg, msg.category);\n        }\n    },[msg, auth, props.history])\n\n    // State para iniciar sesion\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirm: ''\n    });\n\n    const { email, password, name, confirm } = user;\n\n    const handleChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        // validar campos\n        if( name.trim() === '' || \n            email.trim() === '' || \n            password.trim() === '' || \n            confirm.trim() === ''\n        ) {\n            showAlert('Todos los campos son obligatorios', 'alerta-error');\n            return;\n        }\n\n        if(password.length < 6) {\n            showAlert('La contraseña debe contener como mínimo 6 caracteres', 'alerta-error');\n            return;\n        }\n\n        if(password !== confirm) {\n            showAlert('Las contraseñas no coinciden', 'alerta-error');\n            return;\n        }\n        // pasar al action\n        signInUser({\n            name,\n            email,\n            password\n        });\n    }\n    return ( \n        <div className=\"form-usuario\">\n            { alert ? (<div className={`alerta ${alert.category}`}>{alert.msg}</div>) :null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Nueva Cuenta</h1>\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label\n                            htmlFor=\"name\"\n                        >Nombre\n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Nombre\"\n                            value={name}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label\n                            htmlFor=\"email\"\n                        >Email\n                        </label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"E-mail\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label\n                            htmlFor=\"password\"\n                        >Contraseña\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Contraseña\"\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label\n                            htmlFor=\"confirm\"\n                        >Confirmar contraseña\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm\"\n                            name=\"confirm\"\n                            placeholder=\"Confirmar contraseña\"\n                            value={confirm}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Registrarse\"\n                        />\n                    </div>\n                </form>\n                <Link \n                    to={'/new-account'}\n                    className=\"enlace-cuenta\"\n                >Ya tenés una cuenta? Inicia sesión\n                </Link>\n            </div>\n        </div>\n        );\n}\n \nexport default NewAccount;","import { createContext } from 'react';\n\nconst projectContext = createContext();\n\nexport default projectContext;","import React, {Fragment, useState, useContext} from 'react';\nimport projectContext from '../../context/projects/projectContext';\n\nconst NewProject = () => {\n\n    // obtener el state del form\n    const projectsContext = useContext(projectContext);\n    const { form, toggleForm, error, newProject, showErrorForm } = projectsContext;\n\n    // State del nuevo proyecto\n    const [project, setProject] = useState({\n        name: ''\n    });\n\n    const { name } = project;\n\n    const handleChange = e => {\n        setProject({\n            ...project,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        // validar\n        if(name === ''){\n            showErrorForm();\n            return;\n        }\n        \n        // guardo en el state\n        newProject(project);\n        // reinicio el form\n        setProject({\n            name:''\n        })\n    }\n\n    return ( \n        <Fragment>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={ () => toggleForm(true)}\n            >\n                Nuevo Proyecto\n            </button>\n            { form ? \n                <form\n                className=\"formulario-nuevo-proyecto\"\n                onSubmit={handleSubmit}\n            >\n                <input\n                    type=\"text\"\n                    className=\"input-text\"\n                    placeholder=\"Nombre del proyecto\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                />\n                <input\n                    type=\"submit\"\n                    className=\"btn btn-primario btn-block\"\n                    value=\"Agregar\"\n                />\n                <input\n                    type=\"button\"\n                    className=\"btn btn-primario btn-block\"\n                    value=\"Cancelar\"\n                    onClick={() => toggleForm(false)}\n                />\n            </form>\n            \n            : null}\n            { error ? <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> :null}\n        </Fragment>\n     );\n}\n \nexport default NewProject;","import { createContext } from 'react';\n\nconst taskContext = createContext();  \n\nexport default taskContext;","import React, {useContext} from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst Project = ({project}) => {\n\n    const projectsContext = useContext(projectContext);\n    const { getActualProject } = projectsContext;\n\n    const tasksContext = useContext(taskContext);\n    const { getProjectTasks } = tasksContext;\n\n    const getProject = id => {\n        getActualProject(id);\n        getProjectTasks(id);\n    }\n\n    return ( \n        <button\n            type=\"button\"\n            className=\"btn btn-blank\"\n            onClick={() => getProject(project._id)}\n        >\n            <p className=\"centrar\">{project.name}</p>\n        </button>\n     );\n}\n \nexport default Project;","import React, {useContext, useEffect} from 'react';\nimport Project from './Project';\nimport projectContext from '../../context/projects/projectContext';\nimport AlertContext from '../../context/alerts/alertContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ProjectList = () => {\n\n    // obtener los proyectos del state inicial con context\n    const projectsContext = useContext(projectContext);\n    const { projects, msg, getProjects } = projectsContext;\n\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n    // obtener proyectos cuando carga el componente\n    useEffect( () => {\n        if(msg){\n            console.log(msg.msg);\n            showAlert(msg.msg, msg.category);\n        }\n        getProjects();\n    }, []);\n    \n    if(projects.length === 0) return <p className=\"centrar\">No hay proyectos</p>;\n\n    \n\n    return ( \n        <ul className=\"listado-proyectos\">\n            { alert ? (<div className={`alerta ${alert.category}`}>{alert.msg}</div>) : null}\n            <TransitionGroup>\n            {projects.map(project => (\n                <CSSTransition\n                key={project._id}\n                timeout={400}\n                classNames=\"proyectos\"\n                >\n                    <Project \n                        project={project}\n                        />\n                </CSSTransition>\n            ))}\n            </TransitionGroup>\n        </ul>\n     );\n}\n \nexport default ProjectList;","import React from 'react';\nimport NewProject from '../projects/NewProject';\nimport ProjectList from '../projects/ProjectList';\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>MM<span>Tasks</span></h1>\n            <NewProject/>\n            <div className=\"proyectos\">\n                <h2>Mis Proyectos</h2>\n                <ProjectList/>\n            </div>\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, {useContext, useEffect} from 'react';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Navbar = () => {\n\n    const authContext = useContext(AuthContext);\n    const { user, getAuthUser, logOut } = authContext;\n\n    useEffect( () => {\n        getAuthUser();\n    },[])\n\n    return ( \n        <header className=\"app-header\">\n            { user ? \n            <p className=\"nombre-usuario\">\n                Hola <span>{user.name}</span>!\n            </p>\n            : null}\n            { user ? \n            <nav className=\"nav-principal\">\n                <button\n                    className=\"btn btn-blank cerrar-sesion log-out\"\n                    onClick={() => logOut()}\n                >Cerrar sesión</button>\n            </nav>\n            : null}\n        </header>\n     );\n}\n \nexport default Navbar;","import React, {useContext, useState, useEffect} from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst TaskForm = () => {\n\n    const projectsContext = useContext(projectContext);\n    const { actualProject } = projectsContext;\n\n    const tasksContext = useContext(taskContext);\n    const { actualTask, taskError, newTask,  validateTask, getProjectTasks, updateTask } = tasksContext;\n\n    useEffect( () => {\n        if(actualTask !== null){\n            setTask(actualTask);\n        } else {\n            setTask({\n                name: ''\n            })\n        }\n    }, [actualTask])\n    \n    // State del form\n    const [task, setTask] = useState({\n        name: ''\n    })\n\n    const { name } = task;\n\n    if(!actualProject) return null;\n\n    const [actProject] = actualProject;\n\n    const handleChange = e => {\n        setTask({\n            ...task,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(name.trim() === ''){\n            validateTask();\n            return;\n        }\n\n        // Si es edicion o esta agregando\n        if (actualTask === null) {\n            task.project = actProject._id;\n            newTask(task);\n        } else {\n            updateTask(task);\n        }\n        \n        getProjectTasks(actProject._id);\n        setTask({\n            name: ''\n        })\n        \n\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre tarea\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-block\"\n                        value={ actualTask ? 'Editar Tarea' : 'Agregar tarea'}\n                    />\n                </div>\n            </form>\n            { taskError ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\n        </div>\n     );\n}\n \nexport default TaskForm;","import React, {useContext} from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst Task = ({task}) => {\n\n    const projectsContext = useContext(projectContext);\n    const { actualProject } = projectsContext;\n\n    const tasksContext = useContext(taskContext);\n    const { deleteTask, getProjectTasks, updateTask, getActualTask } = tasksContext;\n\n    const [actProject] = actualProject;\n\n    const handleClick = (id) => {\n        deleteTask(id, actProject._id);\n        getProjectTasks(actProject.id);\n    }\n\n    const toggleStatus = task => {\n        if(task.status){\n            task.status = false;\n        } else {\n            task.status = true;\n        }\n        console.log('Task:');\n        console.log(task);\n        updateTask(task)\n    }\n\n    const getTask = task => {\n        getActualTask(task);\n    }\n\n    return ( \n        <li className=\"tarea sombra\">\n            <p>{task.name}</p>\n            <div className=\"estado\">\n                {task.status\n                ? (<button\n                    type=\"button\"\n                    className=\"completo\"\n                    onClick={() => toggleStatus(task)}\n                    >Completo</button>)\n                : (<button\n                    type=\"button\"\n                    className=\"incompleto\"\n                    onClick={() => toggleStatus(task)}\n                    >Incompleto</button>)}\n            </div>\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => getTask(task)}\n                >\n                    Editar\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => handleClick(task._id)}\n                >\n                    Eliminar\n                </button>\n            </div>\n        </li>\n     );\n}\n \nexport default Task;","import React, { Fragment, useContext } from 'react';\nimport Task from './Task';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst TaskList = () => {\n\n    const projectsContext = useContext(projectContext);\n    const { actualProject, deleteProject } = projectsContext;\n\n    const tasksContext = useContext(taskContext);\n    const { projectTasks } = tasksContext;\n\n    // si no hay proyectos\n    if(!actualProject) return <h2>Selecciona un proyecto</h2>\n\n    const [actProject] = actualProject;\n\n    return (\n        <Fragment>\n            <h2>Proyecto: {actProject.name}</h2>\n            <ul className=\"listado-tareas\">\n                { projectTasks.length === 0\n                 ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\n                : \n                <TransitionGroup>\n                    {projectTasks.map(task => \n                        (<CSSTransition\n                            key={task.id}\n                            timeout={400}\n                            classNames=\"tarea\"\n                        >\n                            <Task\n                                task={task}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n                }\n            </ul>\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={() => deleteProject(actProject._id)}\n            >\n                Eliminar proyecto &times;\n            </button>\n        </Fragment>\n     );\n}\n \nexport default TaskList;","import React, {useState, useEffect, useContext} from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Navbar from '../layout/Navbar';\nimport TaskForm from '../tasks/TaskForm';\nimport TaskList from '../tasks/TaskList';\nimport AuthContext from '../../context/auth/authContext';\n \nconst Projects = () => {\n\n    const authContext = useContext(AuthContext);\n    const { getAuthUser } = authContext;\n\n    const [size, setSize] = useState({\n        'windowWidth': 0,\n        'windowHeight': 0\n    })\n\n     useEffect( () => {\n         getAuthUser();\n         let windowWidth = typeof window !== \"undefined\" ? window.innerWidth : 0;\n         let windowHeight = typeof window !== \"undefined\" ? window.innerHeight : 0;\n         \n         setSize({ windowWidth, windowHeight });\n     },[])\n\n    \n\n    return ( \n        <div className=\"contenedor-app\">\n            { size.windowWidth < 768 ? null : <Sidebar/>}\n            <div className=\"seccion-principal\">\n                <Navbar/>\n                <main>\n                    <TaskForm/>\n                    <div className=\"contenedor-tareas\">\n                        <TaskList/>\n                    </div>\n                </main>\n            </div>\n            { size.windowWidth < 768 ? <Sidebar/> : null}\n        </div>\n     );\n}\n \nexport default Projects;","import { FORM_PROJECT, GET_PROJECTS, NEW_PROJECT, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT, PROJECT_ERROR } from '../../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case FORM_PROJECT:\n            return {\n                ...state,\n                form: action.payload\n            }\n        case GET_PROJECTS:\n\n            return {\n                ...state,\n                projects: action.payload\n            }\n\n        case NEW_PROJECT:\n            return {\n                ...state,\n                projects: [...state.projects, action.payload],\n                form: false,\n                error: false\n            }\n\n        case VALIDATE_FORM:\n            return {\n                ...state,\n                error: true\n            }\n        \n        case ACTUAL_PROJECT:\n            return {\n                ...state,\n                actualProject: state.projects.filter( project => project._id === action.payload)\n            }\n\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter( project => project._id !== action.payload),\n                actualProject: null\n            }\n\n        case PROJECT_ERROR:\n            return {\n                ...state,\n                msg: action.payload\n            }\n        default:\n            return state;\n    }\n}","export const FORM_PROJECT = 'FORM_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const NEW_PROJECT = 'NEW_PROJECT';\nexport const VALIDATE_FORM = 'VALIDATE_FORM';\nexport const ACTUAL_PROJECT = 'ACTUAL_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const PROJECT_ERROR = 'PROJECT_ERROR'; \n\nexport const PROJECT_TASKS = 'PROJECT_TASKS';\nexport const NEW_TASK = 'NEW_TASK'\nexport const VALIDATE_TASK = 'VALIDATE_TASK'; \nexport const DELETE_TASK = 'DELETE_TASK';\nexport const TASK_STATUS = 'TASK_STATUS';\nexport const ACTUAL_TASK = 'ACTUAL_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\n\nexport const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n\nexport const SUCCESSFULL_LOGIN = 'SUCCESSFULL_LOGIN' \nexport const FAILED_LOGIN = 'FAILED_LOGIN'\nexport const FAILED_SIGNIN = 'FAILED_SIGNIN'\nexport const SUCCESSFULL_SIGNIN = 'SUCCESSFULL_SIGNIN'\nexport const GET_USER = 'GET_USER'\nexport const LOG_OUT = 'LOG_OUT'","import axios from 'axios';\n\nconst axiosClient = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default axiosClient;","import React, {useReducer} from 'react';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport axiosClient from '../../config/axios';\nimport { FORM_PROJECT,\n         GET_PROJECTS,\n         NEW_PROJECT, \n         VALIDATE_FORM, \n         ACTUAL_PROJECT, \n         DELETE_PROJECT, \n         PROJECT_ERROR } from '../../types';\n\n\nconst ProjectState = props => {\n\n    const initialState = {\n        projects: [],\n        form: false,\n        error: false,\n        actualProject: null,\n        msg: null\n    }\n\n    // dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(projectReducer, initialState);\n\n    // funciones para el crud\n    const toggleForm = (status) => {\n        dispatch({\n            type: FORM_PROJECT,\n            payload: status\n        })\n    }\n\n    const getProjects = async () => {\n        try {\n            const response = await axiosClient.get('/api/projects')\n            dispatch({\n                type: GET_PROJECTS,\n                payload: response.data.projects\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const newProject = async (project) => {\n        try {\n            const response = await axiosClient.post('/api/projects', project);\n            dispatch({\n                type: NEW_PROJECT,\n                payload: response.data\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const showErrorForm = () => {\n        dispatch({\n            type: VALIDATE_FORM\n        })\n    }\n\n    const getActualProject = (id) => {\n        dispatch({\n            type: ACTUAL_PROJECT,\n            payload: id\n        })\n    }\n\n    const deleteProject = async id => {\n        try {\n            await axiosClient.delete(`api/projects/${id}`);\n            dispatch({\n                type: DELETE_PROJECT,\n                payload: id\n            })\n        } catch (error) {\n            const alert = {\n                msg: 'Hubo un error',\n                category: 'alerta-error'\n            }\n            dispatch({\n                type: PROJECT_ERROR,\n                payload: alert\n            })\n        }\n    }\n\n    return (\n        <projectContext.Provider\n            value={{\n                projects: state.projects,\n                form: state.form,\n                error: state.error,\n                actualProject: state.actualProject,\n                msg: state.msg,\n                toggleForm,\n                getProjects,\n                newProject,\n                showErrorForm,\n                getActualProject,\n                deleteProject\n            }}\n        >\n            {props.children}\n        </projectContext.Provider>\n    )\n}\n\nexport default ProjectState","import { PROJECT_TASKS, NEW_TASK, VALIDATE_TASK, DELETE_TASK, ACTUAL_TASK, UPDATE_TASK } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n\n        case PROJECT_TASKS:\n            console.log(action.payload);\n            return {\n                ...state,\n                projectTasks: action.payload\n            }\n\n        case NEW_TASK:\n            return {\n                ...state,\n                projectTasks: [...state.projectTasks, action.payload],\n                taskError: false\n            }\n\n        case VALIDATE_TASK:\n            return {\n                ...state,\n                taskError: true\n            }\n\n        case DELETE_TASK:\n            return {\n                ...state,\n                projectTasks : state.projectTasks.filter( task => task._id !== action.payload)\n            }\n        \n        case UPDATE_TASK:\n            return {\n                ...state,\n                projectTasks: state.projectTasks.map( task => task._id === action.payload._id ? action.payload : task),\n                actualTask: null\n            }\n\n        case ACTUAL_TASK:\n            return {\n                ...state,\n                actualTask: action.payload\n            }\n        \n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport { PROJECT_TASKS,\n         NEW_TASK, \n         VALIDATE_TASK, \n         DELETE_TASK,\n         ACTUAL_TASK,\n         UPDATE_TASK\n        } from '../../types';\nimport axiosClient from '../../config/axios';\n\nconst TaskState = props => {\n    \n    const initialState = {\n        projectTasks: [],\n        taskError: false, \n        actualTask: null\n    }\n\n    const [state, dispatch] = useReducer(TaskReducer, initialState);\n\n    const getProjectTasks = async project => {\n        try {\n            const response = await axiosClient.get('api/tasks', { params: { project }})\n            dispatch({\n                type: PROJECT_TASKS,\n                payload: response.data.tasks\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const newTask = async task => {\n        try {\n            const response = await axiosClient.post('/api/tasks', task);\n            dispatch({\n                type: NEW_TASK,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const validateTask = () => {\n        dispatch({\n            type: VALIDATE_TASK\n        })\n    }\n\n    const deleteTask = async (id, project) => {\n        try {\n            await axiosClient.delete(`/api/tasks/${id}`, { params: { project }});\n            dispatch({\n                type: DELETE_TASK,\n                payload: id\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const updateTask = async task => {\n        try {\n            const response = await axiosClient.put(`/api/tasks/${task._id}`, task);\n            console.log(response.data);\n            dispatch({\n                type: UPDATE_TASK,\n                payload: response.data.taskExists\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const getActualTask = task => {\n        dispatch({\n            type: ACTUAL_TASK,\n            payload: task\n        })\n    }\n\n\n\n    return (\n        <TaskContext.Provider\n            value={{\n                projectTasks: state.projectTasks,\n                taskError: state.taskError,\n                actualTask: state.actualTask,\n                getProjectTasks,\n                newTask,\n                validateTask,\n                deleteTask,\n                getActualTask,\n                updateTask\n            }}\n        >\n            {props.children}\n        </TaskContext.Provider>\n    )\n\n}\n\nexport default TaskState;","import { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n\n        case SHOW_ALERT:\n            return {\n                alert: action.payload\n            }\n\n        case HIDE_ALERT:\n            return{\n                alert: null\n            }\n\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport alertReducer from './alertReducer';\nimport alertContext from './alertContext'\nimport { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\n\nconst AlertState = props => {\n\n    const initialState = {\n        alert: null\n    }\n\n    const [state, dispatch] = useReducer(alertReducer, initialState);\n\n    const showAlert = (msg, category) => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: {\n                msg,\n                category\n            }\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type:HIDE_ALERT\n            })\n        }, 4000);\n    }\n\n    return (\n        <alertContext.Provider\n            value={{\n                alert: state.alert,\n                showAlert\n            }}\n        >\n            {props.children}\n        </alertContext.Provider>\n    )\n\n}\n\nexport default AlertState;\n","import { \n    SUCCESSFULL_LOGIN,\n    SUCCESSFULL_SIGNIN,\n    FAILED_LOGIN,\n    FAILED_SIGNIN,\n    GET_USER,\n    LOG_OUT\n } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n\n        case SUCCESSFULL_SIGNIN:\n        case SUCCESSFULL_LOGIN:\n            localStorage.setItem('token', action.payload.token);    \n            return {\n                ...state,\n                auth: true,\n                msg: null,\n                loading: false   \n            }\n\n        case LOG_OUT:\n        case FAILED_LOGIN:\n        case FAILED_SIGNIN:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                auth: null,\n                msg: action.payload    \n            }\n\n        case GET_USER:\n            return {\n                ...state,\n                auth: true,\n                user: action.payload,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n}","import axiosClient from './axios';\n\nconst authToken = token => {\n    if(token){\n        axiosClient.defaults.headers.common['x-auth-token'] = token;\n    }else {\n        delete axiosClient.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default authToken;","import React, {useReducer} from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport axiosClient from '../../config/axios';\nimport authToken from '../../config/authToken';\n\nimport { \n    SUCCESSFULL_LOGIN,\n    SUCCESSFULL_SIGNIN,\n    FAILED_LOGIN,\n    FAILED_SIGNIN,\n    GET_USER,\n    LOG_OUT\n } from '../../types';\n\n const AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem('token'),\n        auth: null,\n        user: null,\n        msg: null,\n        loading: true\n    }\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    const signInUser = async data => {\n        try {\n            const response = await axiosClient.post('/api/users', data);\n            dispatch({\n                type: SUCCESSFULL_SIGNIN,\n                payload: response.data\n            })\n\n            getAuthUser();\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type: FAILED_SIGNIN,\n                payload: alert\n            })\n        }\n    }\n\n    const getAuthUser = async () => {\n        const token = localStorage.getItem('token');\n        if(token){\n            authToken(token);\n        }\n        try {\n            const response = await axiosClient.get('/api/auth');\n            dispatch({\n                type: GET_USER,\n                payload: response.data.user\n            });\n        } catch (error) {\n            dispatch({\n                type: FAILED_LOGIN\n            })\n        }\n    }\n\n    const logIn = async data => {\n        try {\n            const response = await axiosClient.post('/api/auth', data);\n            console.log(response);\n            dispatch({\n                type: SUCCESSFULL_LOGIN,\n                payload: response.data\n            })\n            getAuthUser();\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type: FAILED_LOGIN,\n                payload: alert\n            })\n        }\n    }\n\n    const logOut = () => {\n        dispatch({\n            type: LOG_OUT\n        })\n    }\n    \n\n    return (\n        <authContext.Provider\n            value={{\n                token: state.token,\n                auth: state.auth,\n                user: state.user,\n                msg: state.msg,\n                loading: state.loading,\n                signInUser,\n                logIn,\n                getAuthUser,\n                logOut\n            }}>\n            {props.children}\n        </authContext.Provider>    \n    )\n\n }\n\n export default AuthState;","import React, {useContext, useEffect} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({component: Component, ...props}) => {\n\n    const authContext = useContext(AuthContext);\n    const { auth, loading, getAuthUser } = authContext;\n\n    useEffect( () => {\n        getAuthUser();\n    }, [])\n\n    return ( \n        <Route\n            {...props } render={ props => !auth && !loading ? (\n                <Redirect to=\"/\"/>\n            ) : (\n                <Component {...props}/>\n            )}\n        />\n     );\n}\n \nexport default PrivateRoute;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NewAccount from './components/auth/NewAccount';\nimport Projects from './components/projects/Projects';\nimport ProjectState from './context/projects/projectState';\nimport TaskState from './context/tasks/taskState';\nimport AlertState from './context/alerts/alertState';\nimport AuthState from './context/auth/authState';\nimport authToken from './config/authToken';\nimport PrivateRoute from './components/routes/PrivateRoute';\n\nconst token = localStorage.getItem('token');\nif(token) {\n  authToken(token);\n}\n\nfunction App() {\n  return (\n    <ProjectState>\n      <TaskState>\n        <AlertState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path='/' component={Login}/>\n                <Route exact path='/new-account' component={NewAccount}/>\n                <PrivateRoute exact path='/projects' component={Projects}/>\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertState>\n      </TaskState>\n    </ProjectState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}