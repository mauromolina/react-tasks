{"ast":null,"code":"import _toConsumableArray from\"/home/mauro/Escritorio/React/react-tasks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/mauro/Escritorio/React/react-tasks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{PROJECT_TASKS,NEW_TASK,VALIDATE_TASK,DELETE_TASK,ACTUAL_TASK,UPDATE_TASK}from'../../types';export default(function(state,action){switch(action.type){case PROJECT_TASKS:console.log(action.payload);return _objectSpread(_objectSpread({},state),{},{projectTasks:action.payload});case NEW_TASK:return _objectSpread(_objectSpread({},state),{},{projectTasks:[].concat(_toConsumableArray(state.projectTasks),[action.payload]),taskError:false});case VALIDATE_TASK:return _objectSpread(_objectSpread({},state),{},{taskError:true});case DELETE_TASK:return _objectSpread(_objectSpread({},state),{},{projectTasks:state.projectTasks.filter(function(task){return task._id!==action.payload;})});case UPDATE_TASK:return _objectSpread(_objectSpread({},state),{},{projectTasks:state.projectTasks.map(function(task){return task._id===action.payload._id?action.payload:task;}),actualTask:null});case ACTUAL_TASK:return _objectSpread(_objectSpread({},state),{},{actualTask:action.payload});default:return state;}});","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/context/tasks/taskReducer.js"],"names":["PROJECT_TASKS","NEW_TASK","VALIDATE_TASK","DELETE_TASK","ACTUAL_TASK","UPDATE_TASK","state","action","type","console","log","payload","projectTasks","taskError","filter","task","_id","map","actualTask"],"mappings":"mVAAA,OAASA,aAAT,CAAwBC,QAAxB,CAAkCC,aAAlC,CAAiDC,WAAjD,CAA8DC,WAA9D,CAA2EC,WAA3E,KAA8F,aAA9F,CAEA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAC9B,OAAOA,MAAM,CAACC,IAAd,EAEI,IAAKR,CAAAA,aAAL,CACIS,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB,EACA,sCACOL,KADP,MAEIM,YAAY,CAAEL,MAAM,CAACI,OAFzB,GAKJ,IAAKV,CAAAA,QAAL,CACI,sCACOK,KADP,MAEIM,YAAY,8BAAMN,KAAK,CAACM,YAAZ,GAA0BL,MAAM,CAACI,OAAjC,EAFhB,CAGIE,SAAS,CAAE,KAHf,GAMJ,IAAKX,CAAAA,aAAL,CACI,sCACOI,KADP,MAEIO,SAAS,CAAE,IAFf,GAKJ,IAAKV,CAAAA,WAAL,CACI,sCACOG,KADP,MAEIM,YAAY,CAAGN,KAAK,CAACM,YAAN,CAAmBE,MAAnB,CAA2B,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaT,MAAM,CAACI,OAAxB,EAA/B,CAFnB,GAKJ,IAAKN,CAAAA,WAAL,CACI,sCACOC,KADP,MAEIM,YAAY,CAAEN,KAAK,CAACM,YAAN,CAAmBK,GAAnB,CAAwB,SAAAF,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaT,MAAM,CAACI,OAAP,CAAeK,GAA5B,CAAkCT,MAAM,CAACI,OAAzC,CAAmDI,IAAvD,EAA5B,CAFlB,CAGIG,UAAU,CAAE,IAHhB,GAMJ,IAAKd,CAAAA,WAAL,CACI,sCACOE,KADP,MAEIY,UAAU,CAAEX,MAAM,CAACI,OAFvB,GAKJ,QACI,MAAOL,CAAAA,KAAP,CA1CR,CA4CH,CA7CD","sourcesContent":["import { PROJECT_TASKS, NEW_TASK, VALIDATE_TASK, DELETE_TASK, ACTUAL_TASK, UPDATE_TASK } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n\n        case PROJECT_TASKS:\n            console.log(action.payload);\n            return {\n                ...state,\n                projectTasks: action.payload\n            }\n\n        case NEW_TASK:\n            return {\n                ...state,\n                projectTasks: [...state.projectTasks, action.payload],\n                taskError: false\n            }\n\n        case VALIDATE_TASK:\n            return {\n                ...state,\n                taskError: true\n            }\n\n        case DELETE_TASK:\n            return {\n                ...state,\n                projectTasks : state.projectTasks.filter( task => task._id !== action.payload)\n            }\n        \n        case UPDATE_TASK:\n            return {\n                ...state,\n                projectTasks: state.projectTasks.map( task => task._id === action.payload._id ? action.payload : task),\n                actualTask: null\n            }\n\n        case ACTUAL_TASK:\n            return {\n                ...state,\n                actualTask: action.payload\n            }\n        \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}