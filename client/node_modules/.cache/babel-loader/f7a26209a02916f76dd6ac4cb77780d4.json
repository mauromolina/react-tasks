{"ast":null,"code":"var _jsxFileName = \"/home/mauro/Escritorio/React/react-tasks/client/src/components/projects/ProjectList.js\";\nimport React, { useContext, useEffect } from 'react';\nimport Project from './Project';\nimport projectContext from '../../context/projects/projectContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ProjectList = ({}) => {\n  // obtener los proyectos del state inicial con context\n  const projectsContext = useContext(projectContext);\n  const {\n    projects,\n    getProjects\n  } = projectsContext; // obtener proyectos cuando carga el componente\n\n  useEffect(() => {\n    getProjects();\n  }, []);\n  if (projects.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"centrar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 38\n    }\n  }, \"No hay proyectos\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"listado-proyectos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, projects.map(project => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: project.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Project, {\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default ProjectList;","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/components/projects/ProjectList.js"],"names":["React","useContext","useEffect","Project","projectContext","CSSTransition","TransitionGroup","ProjectList","projectsContext","projects","getProjects","length","map","project","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;AAEA,MAAMC,WAAW,GAAG,CAAC,EAAD,KAAQ;AAExB;AACA,QAAMC,eAAe,GAAGP,UAAU,CAACG,cAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BF,eAAlC,CAJwB,CAMxB;;AACAN,EAAAA,SAAS,CAAE,MAAM;AACbQ,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAGD,QAAQ,CAACE,MAAT,KAAoB,CAAvB,EAA0B,oBAAO;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AAI1B,sBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,QAAQ,CAACG,GAAT,CAAaC,OAAO,iBACjB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,EADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,OAAD;AACI,IAAA,OAAO,EAAED,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADH,CADD,CADJ,CADJ;AAcH,CA7BD;;AA+BA,eAAeN,WAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport Project from './Project';\nimport projectContext from '../../context/projects/projectContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ProjectList = ({}) => {\n\n    // obtener los proyectos del state inicial con context\n    const projectsContext = useContext(projectContext);\n    const { projects, getProjects } = projectsContext;\n\n    // obtener proyectos cuando carga el componente\n    useEffect( () => {\n        getProjects();\n    }, []);\n    \n    if(projects.length === 0) return <p className=\"centrar\">No hay proyectos</p>;\n\n    \n\n    return ( \n        <ul className=\"listado-proyectos\">\n            <TransitionGroup>\n            {projects.map(project => (\n                <CSSTransition\n                    key={project.id}>\n                    <Project \n                        project={project}\n                    />\n                </CSSTransition>\n            ))}\n            </TransitionGroup>\n        </ul>\n     );\n}\n \nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}