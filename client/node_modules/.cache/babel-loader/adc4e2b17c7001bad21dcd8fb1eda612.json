{"ast":null,"code":"var _jsxFileName = \"/home/mauro/Escritorio/React/react-tasks/client/src/context/tasks/taskState.js\";\nimport React, { useReducer } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport { PROJECT_TASKS, NEW_TASK, VALIDATE_TASK, DELETE_TASK } from '../../types';\n\nconst TaskState = props => {\n  const initialState = {\n    tasks: [{\n      name: 'Elegir plataforma TV',\n      status: false,\n      projectId: 1\n    }, {\n      name: 'Elegir dise単o TV',\n      status: true,\n      projectId: 1\n    }, {\n      name: 'Elegir hosting MERN',\n      status: false,\n      projectId: 3\n    }, {\n      name: 'Elegir colores',\n      status: true,\n      projectId: 2\n    }, {\n      name: 'Elegir plataforma TV',\n      status: false,\n      projectId: 1\n    }, {\n      name: 'Elegir dise単o MERN',\n      status: true,\n      projectId: 3\n    }, {\n      name: 'Elegir hosting MERN',\n      status: false,\n      projectId: 3\n    }, {\n      name: 'Elegir colores',\n      status: true,\n      projectId: 2\n    }],\n    projectTasks: null,\n    taskError: false\n  };\n  const [state, dispatch] = useReducer(TaskReducer, initialState);\n\n  const getProjectTasks = projectId => {\n    dispatch({\n      type: PROJECT_TASKS,\n      payload: projectId\n    });\n  };\n\n  const newTask = task => {\n    dispatch({\n      type: NEW_TASK,\n      payload: task\n    });\n  };\n\n  const validateTask = () => {\n    dispatch({\n      type: VALIDATE_TASK\n    });\n  };\n\n  const deleteTask = id => {\n    dispatch({\n      type: DELETE_TASK,\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      projectTasks: state.projectTasks,\n      taskError: state.taskError,\n      getProjectTasks,\n      newTask,\n      validateTask\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TaskState;","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/context/tasks/taskState.js"],"names":["React","useReducer","TaskContext","TaskReducer","PROJECT_TASKS","NEW_TASK","VALIDATE_TASK","DELETE_TASK","TaskState","props","initialState","tasks","name","status","projectId","projectTasks","taskError","state","dispatch","getProjectTasks","type","payload","newTask","task","validateTask","deleteTask","id","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,EACSC,QADT,EAESC,aAFT,EAGSC,WAHT,QAIe,aAJf;;AAMA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAG,CACR;AAAEC,MAAAA,IAAI,EAAE,sBAAR;AAAgCC,MAAAA,MAAM,EAAE,KAAxC;AAA+CC,MAAAA,SAAS,EAAE;AAA1D,KADQ,EAER;AAAEF,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,MAAM,EAAE,IAApC;AAA0CC,MAAAA,SAAS,EAAE;AAArD,KAFQ,EAGR;AAAEF,MAAAA,IAAI,EAAE,qBAAR;AAA+BC,MAAAA,MAAM,EAAE,KAAvC;AAA8CC,MAAAA,SAAS,EAAC;AAAxD,KAHQ,EAIR;AAAEF,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,MAAM,EAAE,IAAlC;AAAwCC,MAAAA,SAAS,EAAE;AAAnD,KAJQ,EAKR;AAAEF,MAAAA,IAAI,EAAE,sBAAR;AAAgCC,MAAAA,MAAM,EAAE,KAAxC;AAA+CC,MAAAA,SAAS,EAAE;AAA1D,KALQ,EAMR;AAAEF,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,MAAM,EAAE,IAAtC;AAA4CC,MAAAA,SAAS,EAAE;AAAvD,KANQ,EAOR;AAAEF,MAAAA,IAAI,EAAE,qBAAR;AAA+BC,MAAAA,MAAM,EAAE,KAAvC;AAA8CC,MAAAA,SAAS,EAAC;AAAxD,KAPQ,EAQR;AAAEF,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,MAAM,EAAE,IAAlC;AAAwCC,MAAAA,SAAS,EAAE;AAAnD,KARQ,CADS;AAWjBC,IAAAA,YAAY,EAAE,IAXG;AAYjBC,IAAAA,SAAS,EAAE;AAZM,GAArB;AAeA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACE,WAAD,EAAcO,YAAd,CAApC;;AAEA,QAAMS,eAAe,GAAGL,SAAS,IAAI;AACjCI,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEhB,aADD;AAELiB,MAAAA,OAAO,EAAEP;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMQ,OAAO,GAAGC,IAAI,IAAI;AACpBL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,QADD;AAELgB,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMmB,UAAU,GAAGC,EAAE,IAAI;AACrBR,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb,WADD;AAELc,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHf,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADV;AAEHI,MAAAA,YAAY,EAAEE,KAAK,CAACF,YAFjB;AAGHC,MAAAA,SAAS,EAAEC,KAAK,CAACD,SAHd;AAIHG,MAAAA,eAJG;AAKHG,MAAAA,OALG;AAMHE,MAAAA;AANG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKf,KAAK,CAACkB,QAVX,CADJ;AAeH,CA7DD;;AA+DA,eAAenB,SAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport { PROJECT_TASKS,\n         NEW_TASK, \n         VALIDATE_TASK, \n         DELETE_TASK \n        } from '../../types';\n\nconst TaskState = props => {\n    \n    const initialState = {\n        tasks : [\n        { name: 'Elegir plataforma TV', status: false, projectId: 1},\n        { name: 'Elegir dise単o TV', status: true, projectId: 1},\n        { name: 'Elegir hosting MERN', status: false, projectId:3},\n        { name: 'Elegir colores', status: true, projectId: 2},\n        { name: 'Elegir plataforma TV', status: false, projectId: 1},\n        { name: 'Elegir dise単o MERN', status: true, projectId: 3},\n        { name: 'Elegir hosting MERN', status: false, projectId:3},\n        { name: 'Elegir colores', status: true, projectId: 2},\n        ],\n        projectTasks: null,\n        taskError: false\n    }\n\n    const [state, dispatch] = useReducer(TaskReducer, initialState);\n\n    const getProjectTasks = projectId => {\n        dispatch({\n            type: PROJECT_TASKS,\n            payload: projectId\n        })\n    }\n\n    const newTask = task => {\n        dispatch({\n            type: NEW_TASK,\n            payload: task\n        })\n    }\n\n    const validateTask = () => {\n        dispatch({\n            type: VALIDATE_TASK\n        })\n    }\n\n    const deleteTask = id => {\n        dispatch({\n            type: DELETE_TASK,\n            payload: id\n        })\n    }\n\n    return (\n        <TaskContext.Provider\n            value={{\n                tasks: state.tasks,\n                projectTasks: state.projectTasks,\n                taskError: state.taskError,\n                getProjectTasks,\n                newTask,\n                validateTask\n            }}\n        >\n            {props.children}\n        </TaskContext.Provider>\n    )\n\n}\n\nexport default TaskState;"]},"metadata":{},"sourceType":"module"}