{"ast":null,"code":"var _jsxFileName = \"/home/mauro/Escritorio/React/react-tasks/client/src/context/auth/authState.js\";\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport axiosClient from '../../config/axios';\nimport { SUCCESSFULL_LOGIN, SUCCESSFULL_SIGNIN, FAILED_LOGIN, FAILED_SIGNIN, GET_USER, LOG_OUT } from '../../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    auth: null,\n    user: null,\n    msg: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  const signInUser = async data => {\n    try {\n      const response = await axiosClient.post(process.env.REACT_APP_BACKEND_URL + '/api/users', data);\n      console.log(response);\n      dispatch({\n        type: SUCCESSFULL_SIGNIN\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: FAILED_SIGNIN\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(authContext.Provider, {\n    value: {\n      token: state.token,\n      auth: state.auth,\n      user: state.user,\n      msg: state.msg,\n      signInUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/context/auth/authState.js"],"names":["React","useReducer","authContext","authReducer","axiosClient","SUCCESSFULL_LOGIN","SUCCESSFULL_SIGNIN","FAILED_LOGIN","FAILED_SIGNIN","GET_USER","LOG_OUT","AuthState","props","initialState","token","localStorage","getItem","auth","user","msg","state","dispatch","signInUser","data","response","post","process","env","REACT_APP_BACKEND_URL","console","log","type","error","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,SACIC,iBADJ,EAEIC,kBAFJ,EAGIC,YAHJ,EAIIC,aAJJ,EAKIC,QALJ,EAMIC,OANJ,QAOQ,aAPR;;AASC,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAExB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,IAAI,EAAE,IAFW;AAGjBC,IAAAA,IAAI,EAAE,IAHW;AAIjBC,IAAAA,GAAG,EAAE;AAJY,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACE,WAAD,EAAcU,YAAd,CAApC;;AAEA,QAAMS,UAAU,GAAG,MAAMC,IAAN,IAAc;AAC7B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMpB,WAAW,CAACqB,IAAZ,CAAiBC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,YAArD,EAAmEL,IAAnE,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAH,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEzB;AADD,OAAD,CAAR;AAGH,KAND,CAME,OAAO0B,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAX,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEvB;AADD,OAAD,CAAR;AAGH;AACJ,GAbD;;AAgBA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHM,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADV;AAEHG,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFT;AAGHC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAHT;AAIHC,MAAAA,GAAG,EAAEC,KAAK,CAACD,GAJR;AAKHG,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKV,KAAK,CAACqB,QARX,CADJ;AAaF,CAxCD;;AA0CA,eAAetB,SAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport axiosClient from '../../config/axios';\n\nimport { \n    SUCCESSFULL_LOGIN,\n    SUCCESSFULL_SIGNIN,\n    FAILED_LOGIN,\n    FAILED_SIGNIN,\n    GET_USER,\n    LOG_OUT\n } from '../../types';\n\n const AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem('token'),\n        auth: null,\n        user: null,\n        msg: null\n    }\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    const signInUser = async data => {\n        try {\n            const response = await axiosClient.post(process.env.REACT_APP_BACKEND_URL + '/api/users', data);\n            console.log(response);\n            dispatch({\n                type: SUCCESSFULL_SIGNIN\n            })\n        } catch (error) {\n            console.log(error);\n            dispatch({\n                type: FAILED_SIGNIN\n            })\n        }\n    }\n    \n\n    return (\n        <authContext.Provider\n            value={{\n                token: state.token,\n                auth: state.auth,\n                user: state.user,\n                msg: state.msg,\n                signInUser\n            }}>\n            {props.children}\n        </authContext.Provider>    \n    )\n\n }\n\n export default AuthState;"]},"metadata":{},"sourceType":"module"}