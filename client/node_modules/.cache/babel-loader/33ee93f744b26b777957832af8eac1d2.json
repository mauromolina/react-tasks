{"ast":null,"code":"import { PROJECT_TASKS, NEW_TASK, VALIDATE_TASK, DELETE_TASK, TASK_STATUS, ACTUAL_TASK, UPDATE_TASK } from '../../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case PROJECT_TASKS:\n      return { ...state,\n        projectTasks: state.tasks.filter(task => task.projectId === action.payload)\n      };\n\n    case NEW_TASK:\n      return { ...state,\n        tasks: [action.payload, ...state.tasks],\n        taskError: false\n      };\n\n    case VALIDATE_TASK:\n      return { ...state,\n        taskError: true\n      };\n\n    case DELETE_TASK:\n      return { ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n\n    case UPDATE_TASK:\n    case TASK_STATUS:\n      return { ...state,\n        tasks: state.projectTasks.map(task => task.id === action.payload.id ? action.payload : task)\n      };\n\n    case ACTUAL_TASK:\n      return { ...state,\n        actualTask: action.payload\n      };\n\n    case UPDATE_TASK:\n      return { ...state,\n        tasks: state.tasks\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/context/tasks/taskReducer.js"],"names":["PROJECT_TASKS","NEW_TASK","VALIDATE_TASK","DELETE_TASK","TASK_STATUS","ACTUAL_TASK","UPDATE_TASK","state","action","type","projectTasks","tasks","filter","task","projectId","payload","taskError","id","map","actualTask"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,aAAlC,EAAiDC,WAAjD,EAA8DC,WAA9D,EAA2EC,WAA3E,EAAwFC,WAAxF,QAA2G,aAA3G;AAEA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHG,QAAAA,YAAY,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBN,MAAM,CAACO,OAAtD;AAFX,OAAP;;AAKJ,SAAKd,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHI,QAAAA,KAAK,EAAE,CAACH,MAAM,CAACO,OAAR,EAAiB,GAAGR,KAAK,CAACI,KAA1B,CAFJ;AAGHK,QAAAA,SAAS,EAAE;AAHR,OAAP;;AAMJ,SAAKd,aAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHS,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAKJ,SAAKb,WAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHI,QAAAA,KAAK,EAAGJ,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYT,MAAM,CAACO,OAA/C;AAFL,OAAP;;AAKJ,SAAKT,WAAL;AACA,SAAKF,WAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,KAAK,EAAEJ,KAAK,CAACG,YAAN,CAAmBQ,GAAnB,CAAwBL,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYT,MAAM,CAACO,OAAP,CAAeE,EAA3B,GAAgCT,MAAM,CAACO,OAAvC,GAAiDF,IAAjF;AAFJ,OAAP;;AAKJ,SAAKR,WAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHY,QAAAA,UAAU,EAAEX,MAAM,CAACO;AAFhB,OAAP;;AAKJ,SAAKT,WAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHI,QAAAA,KAAK,EAAEJ,KAAK,CAACI;AAFV,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AA/CR;AAiDH,CAlDD","sourcesContent":["import { PROJECT_TASKS, NEW_TASK, VALIDATE_TASK, DELETE_TASK, TASK_STATUS, ACTUAL_TASK, UPDATE_TASK } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n\n        case PROJECT_TASKS:\n            return {\n                ...state,\n                projectTasks: state.tasks.filter( task => task.projectId === action.payload)\n            }\n\n        case NEW_TASK:\n            return {\n                ...state,\n                tasks: [action.payload, ...state.tasks],\n                taskError: false\n            }\n\n        case VALIDATE_TASK:\n            return {\n                ...state,\n                taskError: true\n            }\n\n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks : state.tasks.filter( task => task.id !== action.payload)\n            }\n        \n        case UPDATE_TASK:\n        case TASK_STATUS:\n            return {\n                ...state,\n                tasks: state.projectTasks.map( task => task.id === action.payload.id ? action.payload : task)\n            }\n\n        case ACTUAL_TASK:\n            return {\n                ...state,\n                actualTask: action.payload\n            }\n\n        case UPDATE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks\n            }\n        \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}