{"ast":null,"code":"var _jsxFileName = \"/home/mauro/Escritorio/React/react-tasks/client/src/components/projects/ProjectList.js\";\nimport React, { useContext, useEffect } from 'react';\nimport Project from './Project';\nimport projectContext from '../../context/projects/projectContext';\nimport alertContext from '../../context/alerts/alertContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ProjectList = ({}) => {\n  // obtener los proyectos del state inicial con context\n  const projectsContext = useContext(projectContext);\n  const {\n    projects,\n    msg,\n    getProjects\n  } = projectsContext;\n  const alertsContext = useContext(alertContext);\n  const {\n    alert,\n    showAlert\n  } = alertsContext; // obtener proyectos cuando carga el componente\n\n  useEffect(() => {\n    if (msg) {\n      showAlert(msg.msg, msg.category);\n    }\n\n    getProjects();\n  }, [msg]);\n  if (projects.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"centrar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 38\n    }\n  }, \"No hay proyectos\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"listado-proyectos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, projects.map(project => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: project._id,\n    timeout: 400,\n    classNames: \"proyectos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Project, {\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })))), alert ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `alerta ${alert.category}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }\n  }, alert.msg) : null);\n};\n\nexport default ProjectList;","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/components/projects/ProjectList.js"],"names":["React","useContext","useEffect","Project","projectContext","alertContext","CSSTransition","TransitionGroup","ProjectList","projectsContext","projects","msg","getProjects","alertsContext","alert","showAlert","category","length","map","project","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;AAEA,MAAMC,WAAW,GAAG,CAAC,EAAD,KAAQ;AAExB;AACA,QAAMC,eAAe,GAAGR,UAAU,CAACG,cAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA;AAAjB,MAAiCH,eAAvC;AAEA,QAAMI,aAAa,GAAGZ,UAAU,CAACI,YAAD,CAAhC;AACA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBF,aAA7B,CAPwB,CASxB;;AACAX,EAAAA,SAAS,CAAE,MAAM;AACb,QAAGS,GAAH,EAAO;AACHI,MAAAA,SAAS,CAACJ,GAAG,CAACA,GAAL,EAAUA,GAAG,CAACK,QAAd,CAAT;AACH;;AACDJ,IAAAA,WAAW;AACd,GALQ,EAKN,CAACD,GAAD,CALM,CAAT;AAOA,MAAGD,QAAQ,CAACO,MAAT,KAAoB,CAAvB,EAA0B,oBAAO;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AAI1B,sBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,QAAQ,CAACQ,GAAT,CAAaC,OAAO,iBACjB,oBAAC,aAAD;AACA,IAAA,GAAG,EAAEA,OAAO,CAACC,GADb;AAEA,IAAA,OAAO,EAAE,GAFT;AAGA,IAAA,UAAU,EAAC,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,OAAD;AACI,IAAA,OAAO,EAAED,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADH,CADD,CADJ,EAcML,KAAK,gBAAI;AAAK,IAAA,SAAS,EAAG,UAASA,KAAK,CAACE,QAAS,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CF,KAAK,CAACH,GAAnD,CAAJ,GAAqE,IAdhF,CADJ;AAkBH,CAvCD;;AAyCA,eAAeH,WAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport Project from './Project';\nimport projectContext from '../../context/projects/projectContext';\nimport alertContext from '../../context/alerts/alertContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ProjectList = ({}) => {\n\n    // obtener los proyectos del state inicial con context\n    const projectsContext = useContext(projectContext);\n    const { projects, msg, getProjects } = projectsContext;\n\n    const alertsContext = useContext(alertContext);\n    const { alert, showAlert } = alertsContext;\n\n    // obtener proyectos cuando carga el componente\n    useEffect( () => {\n        if(msg){\n            showAlert(msg.msg, msg.category);\n        }\n        getProjects();\n    }, [msg]);\n    \n    if(projects.length === 0) return <p className=\"centrar\">No hay proyectos</p>;\n\n    \n\n    return ( \n        <ul className=\"listado-proyectos\">\n            <TransitionGroup>\n            {projects.map(project => (\n                <CSSTransition\n                key={project._id}\n                timeout={400}\n                classNames=\"proyectos\"\n                >\n                    <Project \n                        project={project}\n                        />\n                </CSSTransition>\n            ))}\n            </TransitionGroup>\n            { alert ? (<div className={`alerta ${alert.category}`}>{alert.msg}</div>) : null}\n        </ul>\n     );\n}\n \nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}