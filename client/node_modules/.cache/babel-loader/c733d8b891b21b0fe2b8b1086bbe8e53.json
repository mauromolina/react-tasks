{"ast":null,"code":"var _jsxFileName = \"/home/mauro/Escritorio/React/react-tasks/client/src/context/projects/projectState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport { FORM_PROJECT, GET_PROJECTS, NEW_PROJECT, VALIDATE_FORM } from '../../types';\n\nconst ProjectState = props => {\n  const projects = [{\n    id: 1,\n    name: 'Tienda virtual'\n  }, {\n    id: 2,\n    name: 'Diseño de sitio web'\n  }, {\n    id: 3,\n    name: 'MERN Tasks'\n  }];\n  const initialState = {\n    projects: [],\n    form: false,\n    error: false\n  }; // dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(projectReducer, initialState); // funciones para el crud\n\n  const toggleForm = status => {\n    dispatch({\n      type: FORM_PROJECT,\n      payload: status\n    });\n  };\n\n  const getProjects = () => {\n    dispatch({\n      type: GET_PROJECTS,\n      payload: projects\n    });\n  }; // agregar un proyecto\n\n\n  const newProject = project => {\n    project.id = uuid.v4();\n    dispatch({\n      type: NEW_PROJECT,\n      payload: project\n    });\n  };\n\n  const showErrorForm = () => {\n    dispatch({\n      type: VALIDATE_FORM\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(projectContext.Provider, {\n    value: {\n      projects: state.projects,\n      form: state.form,\n      toggleForm,\n      getProjects,\n      newProject\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProjectState;","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/context/projects/projectState.js"],"names":["React","useReducer","uuid","projectContext","projectReducer","FORM_PROJECT","GET_PROJECTS","NEW_PROJECT","VALIDATE_FORM","ProjectState","props","projects","id","name","initialState","form","error","state","dispatch","toggleForm","status","type","payload","getProjects","newProject","project","v4","showErrorForm","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,WAArC,EAAkDC,aAAlD,QAAuE,aAAvE;;AAGA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE1B,QAAMC,QAAQ,GAAI,CACd;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE;AAAb,GADc,EAEd;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE;AAAb,GAFc,EAGd;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE;AAAb,GAHc,CAAlB;AAMA,QAAMC,YAAY,GAAG;AACjBH,IAAAA,QAAQ,EAAE,EADO;AAEjBI,IAAAA,IAAI,EAAE,KAFW;AAGjBC,IAAAA,KAAK,EAAE;AAHU,GAArB,CAR0B,CAc1B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CAApC,CAf0B,CAiB1B;;AACA,QAAMK,UAAU,GAAIC,MAAD,IAAY;AAC3BF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEhB,YADD;AAELiB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMG,WAAW,GAAG,MAAM;AACtBL,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEf,YADD;AAELgB,MAAAA,OAAO,EAAEX;AAFJ,KAAD,CAAR;AAIH,GALD,CAzB0B,CAgC1B;;;AACA,QAAMa,UAAU,GAAIC,OAAD,IAAa;AAC5BA,IAAAA,OAAO,CAACb,EAAR,GAAaV,IAAI,CAACwB,EAAL,EAAb;AACAR,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEd,WADD;AAELe,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GAND;;AAQA,QAAME,aAAa,GAAG,MAAM;AACxBT,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,QAAQ,EAAEM,KAAK,CAACN,QADb;AAEHI,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAFT;AAGHI,MAAAA,UAHG;AAIHI,MAAAA,WAJG;AAKHC,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKd,KAAK,CAACkB,QATX,CADJ;AAaH,CA5DD;;AA8DA,eAAenB,YAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport uuid from 'uuid';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport { FORM_PROJECT, GET_PROJECTS, NEW_PROJECT, VALIDATE_FORM } from '../../types';\n\n\nconst ProjectState = props => {\n\n    const projects =  [\n        {id:1, name: 'Tienda virtual'},\n        {id:2, name: 'Diseño de sitio web'},\n        {id:3, name: 'MERN Tasks'}\n    ]\n\n    const initialState = {\n        projects: [],\n        form: false,\n        error: false\n    }\n\n    // dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(projectReducer, initialState);\n\n    // funciones para el crud\n    const toggleForm = (status) => {\n        dispatch({\n            type: FORM_PROJECT,\n            payload: status\n        })\n    }\n\n    const getProjects = () => {\n        dispatch({\n            type: GET_PROJECTS,\n            payload: projects\n        })\n    }\n\n    // agregar un proyecto\n    const newProject = (project) => {\n        project.id = uuid.v4();\n        dispatch({\n            type: NEW_PROJECT,\n            payload: project\n        });\n    }\n\n    const showErrorForm = () => {\n        dispatch({\n            type: VALIDATE_FORM\n        })\n    }\n\n    return (\n        <projectContext.Provider\n            value={{\n                projects: state.projects,\n                form: state.form,\n                toggleForm,\n                getProjects,\n                newProject\n            }}\n        >\n            {props.children}\n        </projectContext.Provider>\n    )\n}\n\nexport default ProjectState"]},"metadata":{},"sourceType":"module"}