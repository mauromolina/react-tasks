{"ast":null,"code":"import _defineProperty from\"/home/mauro/Escritorio/React/react-tasks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/mauro/Escritorio/React/react-tasks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/mauro/Escritorio/React/react-tasks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import projectContext from'../../context/projects/projectContext';import taskContext from'../../context/tasks/taskContext';var TaskForm=function TaskForm(){var projectsContext=useContext(projectContext);var actualProject=projectsContext.actualProject;var tasksContext=useContext(taskContext);var actualTask=tasksContext.actualTask,taskError=tasksContext.taskError,newTask=tasksContext.newTask,validateTask=tasksContext.validateTask,getProjectTasks=tasksContext.getProjectTasks,updateTask=tasksContext.updateTask;useEffect(function(){if(actualTask!==null){setTask(actualTask);}else{setTask({name:''});}},[actualTask]);// State del form\nvar _useState=useState({name:''}),_useState2=_slicedToArray(_useState,2),task=_useState2[0],setTask=_useState2[1];var name=task.name;if(!actualProject)return null;var _actualProject=_slicedToArray(actualProject,1),actProject=_actualProject[0];var handleChange=function handleChange(e){setTask(_objectSpread(_objectSpread({},task),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmit=function handleSubmit(e){e.preventDefault();if(name.trim()===''){validateTask();return;}// Si es edicion o esta agregando\nif(actualTask===null){task.project=actProject._id;newTask(task);}else{updateTask(task);}getProjectTasks(actProject._id);setTask({name:''});};return/*#__PURE__*/React.createElement(\"div\",{className:\"formulario\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"input-text\",placeholder:\"Nombre tarea\",name:\"name\",value:name,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primario btn-block\",value:actualTask?'Editar Tarea':'Agregar tarea'}))),taskError?/*#__PURE__*/React.createElement(\"p\",{className:\"mensaje error\"},\"El nombre de la tarea es obligatorio\"):null);};export default TaskForm;","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/components/tasks/TaskForm.js"],"names":["React","useContext","useState","useEffect","projectContext","taskContext","TaskForm","projectsContext","actualProject","tasksContext","actualTask","taskError","newTask","validateTask","getProjectTasks","updateTask","setTask","name","task","actProject","handleChange","e","target","value","handleSubmit","preventDefault","trim","project","_id"],"mappings":"mfAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,QAA3B,CAAqCC,SAArC,KAAqD,OAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,uCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAEnB,GAAMC,CAAAA,eAAe,CAAGN,UAAU,CAACG,cAAD,CAAlC,CAFmB,GAGXI,CAAAA,aAHW,CAGOD,eAHP,CAGXC,aAHW,CAKnB,GAAMC,CAAAA,YAAY,CAAGR,UAAU,CAACI,WAAD,CAA/B,CALmB,GAMXK,CAAAA,UANW,CAMoED,YANpE,CAMXC,UANW,CAMCC,SAND,CAMoEF,YANpE,CAMCE,SAND,CAMYC,OANZ,CAMoEH,YANpE,CAMYG,OANZ,CAMsBC,YANtB,CAMoEJ,YANpE,CAMsBI,YANtB,CAMoCC,eANpC,CAMoEL,YANpE,CAMoCK,eANpC,CAMqDC,UANrD,CAMoEN,YANpE,CAMqDM,UANrD,CAQnBZ,SAAS,CAAE,UAAM,CACb,GAAGO,UAAU,GAAK,IAAlB,CAAuB,CACnBM,OAAO,CAACN,UAAD,CAAP,CACH,CAFD,IAEO,CACHM,OAAO,CAAC,CACJC,IAAI,CAAE,EADF,CAAD,CAAP,CAGH,CACJ,CARQ,CAQN,CAACP,UAAD,CARM,CAAT,CAUA;AAlBmB,cAmBKR,QAAQ,CAAC,CAC7Be,IAAI,CAAE,EADuB,CAAD,CAnBb,wCAmBZC,IAnBY,eAmBNF,OAnBM,kBAuBXC,CAAAA,IAvBW,CAuBFC,IAvBE,CAuBXD,IAvBW,CAyBnB,GAAG,CAACT,aAAJ,CAAmB,MAAO,KAAP,CAzBA,kCA2BEA,aA3BF,IA2BZW,UA3BY,mBA6BnB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACtBL,OAAO,gCACAE,IADA,wBAEFG,CAAC,CAACC,MAAF,CAASL,IAFP,CAEeI,CAAC,CAACC,MAAF,CAASC,KAFxB,GAAP,CAIH,CALD,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,CAAC,CAAI,CACtBA,CAAC,CAACI,cAAF,GACA,GAAGR,IAAI,CAACS,IAAL,KAAgB,EAAnB,CAAsB,CAClBb,YAAY,GACZ,OACH,CAED;AACA,GAAIH,UAAU,GAAK,IAAnB,CAAyB,CACrBQ,IAAI,CAACS,OAAL,CAAeR,UAAU,CAACS,GAA1B,CACAhB,OAAO,CAACM,IAAD,CAAP,CACH,CAHD,IAGO,CACHH,UAAU,CAACG,IAAD,CAAV,CACH,CAEDJ,eAAe,CAACK,UAAU,CAACS,GAAZ,CAAf,CACAZ,OAAO,CAAC,CACJC,IAAI,CAAE,EADF,CAAD,CAAP,CAKH,CArBD,CAuBA,mBACI,2BAAK,SAAS,CAAC,YAAf,eACI,4BACI,QAAQ,CAAEO,YADd,eAGI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BACI,IAAI,CAAC,MADT,CAEI,SAAS,CAAC,YAFd,CAGI,WAAW,CAAC,cAHhB,CAII,IAAI,CAAC,MAJT,CAKI,KAAK,CAAEP,IALX,CAMI,QAAQ,CAAEG,YANd,EADJ,CAHJ,cAaI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BACI,IAAI,CAAC,QADT,CAEI,SAAS,CAAC,4BAFd,CAGI,KAAK,CAAGV,UAAU,CAAG,cAAH,CAAoB,eAH1C,EADJ,CAbJ,CADJ,CAsBMC,SAAS,cAAG,yBAAG,SAAS,CAAC,eAAb,yCAAH,CAA2E,IAtB1F,CADJ,CA0BH,CArFD,CAuFA,cAAeL,CAAAA,QAAf","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst TaskForm = () => {\n\n    const projectsContext = useContext(projectContext);\n    const { actualProject } = projectsContext;\n\n    const tasksContext = useContext(taskContext);\n    const { actualTask, taskError, newTask,  validateTask, getProjectTasks, updateTask } = tasksContext;\n\n    useEffect( () => {\n        if(actualTask !== null){\n            setTask(actualTask);\n        } else {\n            setTask({\n                name: ''\n            })\n        }\n    }, [actualTask])\n    \n    // State del form\n    const [task, setTask] = useState({\n        name: ''\n    })\n\n    const { name } = task;\n\n    if(!actualProject) return null;\n\n    const [actProject] = actualProject;\n\n    const handleChange = e => {\n        setTask({\n            ...task,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(name.trim() === ''){\n            validateTask();\n            return;\n        }\n\n        // Si es edicion o esta agregando\n        if (actualTask === null) {\n            task.project = actProject._id;\n            newTask(task);\n        } else {\n            updateTask(task);\n        }\n        \n        getProjectTasks(actProject._id);\n        setTask({\n            name: ''\n        })\n        \n\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre tarea\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-block\"\n                        value={ actualTask ? 'Editar Tarea' : 'Agregar tarea'}\n                    />\n                </div>\n            </form>\n            { taskError ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\n        </div>\n     );\n}\n \nexport default TaskForm;"]},"metadata":{},"sourceType":"module"}