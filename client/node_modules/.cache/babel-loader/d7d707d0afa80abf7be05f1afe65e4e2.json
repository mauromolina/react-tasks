{"ast":null,"code":"var _jsxFileName = \"/home/mauro/Escritorio/React/react-tasks/client/src/components/tasks/TaskForm.js\";\nimport React, { useContext, useState } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst TaskForm = () => {\n  const projectsContext = useContext(projectContext);\n  const {\n    actualProject\n  } = projectsContext;\n  const tasksContext = useContext(taskContext);\n  const {\n    newTask,\n    taskError,\n    validateTask,\n    getProjectTasks\n  } = tasksContext; // State del form\n\n  const [task, setTask] = useState({\n    name: ''\n  });\n  const {\n    name\n  } = task;\n  if (!actualProject) return null;\n\n  const handleChange = e => {\n    setTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.trim() === '') {\n      validateTask();\n      return;\n    }\n\n    console.log(actualProject);\n    console.log(actualProject);\n    console.log(actualProject.name);\n    task.projectId = actualProject.id;\n    task.status = false;\n    newTask(task);\n    console.log(task);\n    getProjectTasks(task.projectId);\n    setTask({\n      name: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre tarea\",\n    name: \"name\",\n    value: name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar tarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }))), taskError ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }\n  }, \"El nombre de la tarea es obligatorio\") : null);\n};\n\nexport default TaskForm;","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/components/tasks/TaskForm.js"],"names":["React","useContext","useState","projectContext","taskContext","TaskForm","projectsContext","actualProject","tasksContext","newTask","taskError","validateTask","getProjectTasks","task","setTask","name","handleChange","e","target","value","handleSubmit","preventDefault","trim","console","log","projectId","id","status"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAMC,eAAe,GAAGL,UAAU,CAACE,cAAD,CAAlC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAoBD,eAA1B;AAEA,QAAME,YAAY,GAAGP,UAAU,CAACG,WAAD,CAA/B;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA;AAApC,MAAwDJ,YAA9D,CANmB,CAQnB;;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC7Ba,IAAAA,IAAI,EAAE;AADuB,GAAD,CAAhC;AAIA,QAAM;AAAEA,IAAAA;AAAF,MAAWF,IAAjB;AAEA,MAAG,CAACN,aAAJ,EAAmB,OAAO,IAAP;;AAEnB,QAAMS,YAAY,GAAGC,CAAC,IAAI;AACtBH,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACI,CAAC,CAACC,MAAF,CAASH,IAAV,GAAkBE,CAAC,CAACC,MAAF,CAASC;AAFvB,KAAD,CAAP;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAGN,IAAI,CAACO,IAAL,OAAgB,EAAnB,EAAsB;AAClBX,MAAAA,YAAY;AACZ;AACH;;AACDY,IAAAA,OAAO,CAACC,GAAR,CAAYjB,aAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,aAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,aAAa,CAACQ,IAA1B;AACAF,IAAAA,IAAI,CAACY,SAAL,GAAiBlB,aAAa,CAACmB,EAA/B;AACAb,IAAAA,IAAI,CAACc,MAAL,GAAc,KAAd;AACAlB,IAAAA,OAAO,CAACI,IAAD,CAAP;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAD,IAAAA,eAAe,CAACC,IAAI,CAACY,SAAN,CAAf;AACAX,IAAAA,OAAO,CAAC;AACJC,MAAAA,IAAI,EAAE;AADF,KAAD,CAAP;AAIH,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEK,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,WAAW,EAAC,cAHhB;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,KAAK,EAAEL,IALX;AAMI,IAAA,QAAQ,EAAEC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,eAaI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,KAAK,EAAC,eAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,CADJ,EAsBMN,SAAS,gBAAG;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAH,GAA2E,IAtB1F,CADJ;AA0BH,CAtED;;AAwEA,eAAeL,QAAf","sourcesContent":["import React, {useContext, useState} from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst TaskForm = () => {\n\n    const projectsContext = useContext(projectContext);\n    const { actualProject } = projectsContext;\n\n    const tasksContext = useContext(taskContext);\n    const { newTask, taskError, validateTask, getProjectTasks } = tasksContext;\n\n    // State del form\n    const [task, setTask] = useState({\n        name: ''\n    })\n\n    const { name } = task;\n\n    if(!actualProject) return null;\n\n    const handleChange = e => {\n        setTask({\n            ...task,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(name.trim() === ''){\n            validateTask();\n            return;\n        }\n        console.log(actualProject);\n        console.log(actualProject);\n        console.log(actualProject.name);\n        task.projectId = actualProject.id;\n        task.status = false;\n        newTask(task);\n        console.log(task);\n        getProjectTasks(task.projectId);\n        setTask({\n            name: ''\n        })\n\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre tarea\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-block\"\n                        value=\"Agregar tarea\"\n                    />\n                </div>\n            </form>\n            { taskError ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\n        </div>\n     );\n}\n \nexport default TaskForm;"]},"metadata":{},"sourceType":"module"}