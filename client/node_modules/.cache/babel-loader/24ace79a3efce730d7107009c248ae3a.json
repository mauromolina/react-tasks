{"ast":null,"code":"import { FORM_PROJECT, GET_PROJECTS, NEW_PROJECT, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT } from '../../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case FORM_PROJECT:\n      return { ...state,\n        form: action.payload\n      };\n\n    case GET_PROJECTS:\n      return { ...state,\n        projects: action.payload\n      };\n\n    case NEW_PROJECT:\n      return { ...state,\n        projects: [...state.projects, action.payload],\n        form: false,\n        error: false\n      };\n\n    case VALIDATE_FORM:\n      return { ...state,\n        error: true\n      };\n\n    case ACTUAL_PROJECT:\n      return { ...state,\n        actualProject: state.projects.filter(project => project._id === action.payload)\n      };\n\n    case DELETE_PROJECT:\n      return { ...state,\n        projects: state.projects.filter(project => project.id !== action.payload),\n        actualProject: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/mauro/Escritorio/React/react-tasks/client/src/context/projects/projectReducer.js"],"names":["FORM_PROJECT","GET_PROJECTS","NEW_PROJECT","VALIDATE_FORM","ACTUAL_PROJECT","DELETE_PROJECT","state","action","type","form","payload","projects","error","actualProject","filter","project","_id","id"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,WAArC,EAAkDC,aAAlD,EAAiEC,cAAjE,EAAiFC,cAAjF,QAAuG,aAAvG;AAGA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,YAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAFV,OAAP;;AAIJ,SAAKT,YAAL;AAEI,aAAO,EACH,GAAGK,KADA;AAEHK,QAAAA,QAAQ,EAAEJ,MAAM,CAACG;AAFd,OAAP;;AAKJ,SAAKR,WAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHK,QAAAA,QAAQ,EAAE,CAAC,GAAGL,KAAK,CAACK,QAAV,EAAoBJ,MAAM,CAACG,OAA3B,CAFP;AAGHD,QAAAA,IAAI,EAAE,KAHH;AAIHG,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAOJ,SAAKT,aAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHM,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAKJ,SAAKR,cAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHO,QAAAA,aAAa,EAAEP,KAAK,CAACK,QAAN,CAAeG,MAAf,CAAuBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBT,MAAM,CAACG,OAAzD;AAFZ,OAAP;;AAKJ,SAAKL,cAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHK,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeG,MAAf,CAAuBC,OAAO,IAAIA,OAAO,CAACE,EAAR,KAAeV,MAAM,CAACG,OAAxD,CAFP;AAGHG,QAAAA,aAAa,EAAE;AAHZ,OAAP;;AAKJ;AACI,aAAOP,KAAP;AAxCR;AA0CH,CA3CD","sourcesContent":["import { FORM_PROJECT, GET_PROJECTS, NEW_PROJECT, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT } from '../../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case FORM_PROJECT:\n            return {\n                ...state,\n                form: action.payload\n            }\n        case GET_PROJECTS:\n\n            return {\n                ...state,\n                projects: action.payload\n            }\n\n        case NEW_PROJECT:\n            return {\n                ...state,\n                projects: [...state.projects, action.payload],\n                form: false,\n                error: false\n            }\n\n        case VALIDATE_FORM:\n            return {\n                ...state,\n                error: true\n            }\n        \n        case ACTUAL_PROJECT:\n            return {\n                ...state,\n                actualProject: state.projects.filter( project => project._id === action.payload)\n            }\n\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter( project => project.id !== action.payload),\n                actualProject: null\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}